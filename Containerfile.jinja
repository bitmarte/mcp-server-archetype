# --- Base image Python slim ---
FROM python:3.11-slim

# --- Installazione dipendenze di sistema (layer separato per caching) ---
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        git \
        curl \
        libzstd-dev \
        libsnappy-dev \
        sqlite3 \
        libsqlite3-dev && \
    rm -rf /var/lib/apt/lists/*

# --- Aggiorna pip subito ---
RUN python -m pip install --upgrade pip setuptools wheel

# --- Crea utente non root ---
RUN useradd -m mcpuser
USER mcpuser
WORKDIR /app

# --- Aggiunge la CLI di pip user al PATH ---
ENV PATH=/home/mcpuser/.local/bin:$PATH

# --- Crea comunque la directory vendor/mcp-core ---
RUN mkdir -p /app/vendor
# --- Copia solo i file di build necessari prima del codice (layer caching) ---
COPY --chown=mcpuser:mcpuser vendor/ /app/vendor/

# Copio il file con l'hash
COPY --chown=mcpuser:mcpuser vendor/mcp-core_remote_last-commit.txt /tmp/mcp-core_remote_last-commit.txt

# --- Build e installazione wheel del progetto locale o da Git ---
RUN if [ -d "vendor/mcp-core" ]; then \
        echo "=== Installo mcp-core locale ===" && \
        python -m pip install --no-cache-dir --user --upgrade --editable vendor/mcp-core; \
    else \
        MCP_HASH=$(cat /tmp/mcp-core_remote_last-commit.txt) && \
        echo "=== Installo mcp-core da GitHub commit $MCP_HASH ===" && \
        python -m pip install --no-cache-dir --user --upgrade git+https://github.com/bitmarte/mcp-core@$MCP_HASH; \
    fi

# --- Copia strumenti e .env solo dopo l'installazione ---
COPY --chown=mcpuser:mcpuser tools/ /app/tools/
COPY --chown=mcpuser:mcpuser .env /app/

# --- Porta esposta ---
EXPOSE {{ port }}

# --- Comando di default ---
CMD ["mcp-core"]
